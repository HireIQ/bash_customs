app_path() {
    [ -z "$1" ] && return -1
    local arg category
    arg=`basename $1`
    category=`dirname $1`
    [ '.' == "$category" ] && category=$1
    case $category in
        'root') 
            APP_PATH="$HIREIQ_ROOT/" ;;
        'lib') 
            APP_PATH="$HIREIQ_ROOT/py/toomah/lib" ;;
        'django')
            APP_PATH="$(dirname $($HIREIQ_ROOT/ve/bin/python -c 'import django; print django.__file__'))" ;;
        'apps')
            APP_PATH="$HIREIQ_ROOT/py/toomah/djangoapps/$arg" ;;
        'assessments')
            APP_PATH="$HIREIQ_ROOT/py/toomah/assessments/$arg" ;;
        'projects')
            APP_PATH="$HIREIQ_ROOT/py/toomah/djangoprojects/$arg" ;;
        *)
            echo "No category $category"
            return -1
        ;;
    esac
    if [ ! -d "$APP_PATH" ]; then
        echo "Cannot find $1"
        return -1
    fi
}

# cd, but better
gt() {
    app_path $1 && cd $APP_PATH
}

# Open app in textmate
edit() {
    app_path $1 && mate $APP_PATH
}

# Find what module defines a class
function who_defines() {
    local module
    module=$(grep -rl "class $1\>" $HIREIQ_ROOT/py/toomah | head -n 1 |
           sed 's:^'$HIREIQ_ROOT'/py/':: |
           sed 's:/:.:g')
    [ -z $module ] || basename $module .py
}

function missing_imports() {
    pyflakes $1 | grep "undefined name" |
        sed "s/.*undefined name \'\\(.*\\)\'\$/\\1/" | sort -u | while read class; do
            echo $(who_defines $class) $class
        done | sort -u |
        ruby -e 'a=nil; $stdin.each_line.map(&:split).each {|f, l| if l.nil? then puts "import #{f}" elsif a == f then $>.write ", #{l}" else a = f; puts; $>.write "from #{f} import #{l}" end}'; echo
}
