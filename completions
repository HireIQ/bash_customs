# Custom completion rules

_dirs() {
    local dir
    dir=`basename $1`
    find $1 -type d -maxdepth 1 | xargs  -II basename I | grep -v $dir
}

_list_apps() {
    # Maintains a list of apps in our system
    _dirs $HIREIQ_ROOT/py/toomah/djangoapps
}

_list_pois() {
    # All points of interest in our system
    _list_apps | sed 's|^|apps/|'
    _dirs $HIREIQ_ROOT/py/toomah/djangoprojects | sed 's|^|projects/|'
    echo root
}

_poi_completion() {
    APPS=`_list_pois`
    prefix="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "$APPS" -- $prefix) )
    return 0
}

_manage_completion() {
    local choices APPS SUBCOMMANDS exe
    # This function is not remotely complete. Add more as needed
    exe=$COMP_WORDS
    APPS=`_list_apps`
    # This could probably be better but my awk foo just isn't that strong
    SUBCOMMANDS=`$exe help 2>&1 1>/dev/null  | awk '/.*Available.*/,/END/' | grep -v "Available"`
    first="${COMP_WORDS[1]}"
    prefix="${COMP_WORDS[COMP_CWORD]}"
    # If its the first choice, just use commands
    if [ "1" -eq "$COMP_CWORD" ]; then
        choices=$SUBCOMMANDS
    else
        case $first in
            'test') choices=$APPS ;;
            'shell') choices='--plain' ;;
            *) ;;
        esac
    fi
    COMPREPLY=( $(compgen -W "$choices" -- $prefix) )
    return 0
}

complete -F _poi_completion gt
complete -F _poi_completion edit
complete -F _manage_completion m
